workspace(name = "validator")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "com_google_absl",
    sha256 = "1070121425726f3b4d4348e067f34f91f754802c2cebb67b65667eb2406cb2cf",
    strip_prefix = "abseil-cpp-f393335cb7410fc3a88f41dc5dd878c020213e0b",
    urls = ["https://github.com/abseil/abseil-cpp/archive/f393335cb7410fc3a88f41dc5dd878c020213e0b.zip"],
)

http_archive(
    name = "com_google_googletest",
    sha256 = "142a19ae6e500a7c31e017d57b7071c77972039887395176d8eb9b299c47205a",
    strip_prefix = "googletest-b10fad38c4026a29ea6561ab15fc4818170d1c10",
    urls = ["https://github.com/google/googletest/archive/b10fad38c4026a29ea6561ab15fc4818170d1c10.zip"],  # 2019-01-07
)

http_archive(
    name = "com_google_protobuf",
    sha256 = "63a3798ffc0191238cbc2dd3486a955a0d148511d22c6510d3e3b0299c41e579",
    strip_prefix = "protobuf-9b8b2760f82433e30b7613284f01a3d37dea76d6",
    urls = ["https://github.com/protocolbuffers/protobuf/archive/9b8b2760f82433e30b7613284f01a3d37dea76d6.zip"],
)
load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")
protobuf_deps()

http_archive(
    name = "com_github_gflags_gflags",
    sha256 = "017e0a91531bfc45be9eaf07e4d8fed33c488b90b58509dbd2e33a33b2648ae6",
    strip_prefix = "gflags-a738fdf9338412f83ab3f26f31ac11ed3f3ec4bd",
    urls = ["https://github.com/gflags/gflags/archive/a738fdf9338412f83ab3f26f31ac11ed3f3ec4bd.zip"],
)

http_archive(
    name = "com_googlesource_code_re2",
    sha256 = "74d8d42e6398cd551752de78416e32a3fd388b83e98d36caf21b9ddc336f8a8d",
    strip_prefix = "re2-7e0c1a9e2417e70e5f0efc323267ac71d1fa0685",
    urls = ["https://github.com/google/re2/archive/7e0c1a9e2417e70e5f0efc323267ac71d1fa0685.zip"],
)

# rules_cc defines rules for generating C++ code from Protocol Buffers.
http_archive(
    name = "rules_cc",
    sha256 = "0d060bbfe3446804ca668a807522712fb460200d4eaefb41b4137bf9fbdf3f93",
    strip_prefix = "rules_cc-51b77439a109b8c8f75ad70a130293291ed8b851",
    urls = ["https://github.com/bazelbuild/rules_cc/archive/51b77439a109b8c8f75ad70a130293291ed8b851.zip"],
)
load("@rules_cc//cc:repositories.bzl", "rules_cc_dependencies")
rules_cc_dependencies()

# rules_proto defines abstract rules for building Protocol Buffers.
http_archive(
    name = "rules_proto",
    sha256 = "c6d6f9bfd39b6417724fd4a504767aa1e8dbfe828d9d41ab4ccd1976aba53fb4",
    strip_prefix = "rules_proto-7188888362a203892dec354f52623f9970bff48c",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_proto/archive/7188888362a203892dec354f52623f9970bff48c.tar.gz",
        "https://github.com/bazelbuild/rules_proto/archive/7188888362a203892dec354f52623f9970bff48c.tar.gz",
    ],
)
load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")
rules_proto_dependencies()
rules_proto_toolchains()

http_archive(
    name = "emsdk",
    sha256 = "8f793c55699397a5dd18d8502ebd1ecab3be95697070407dc88770d73fcb3981",
    strip_prefix = "emsdk-bfda0d0756751114dbab597396e67dcaa63bb331/bazel",
    url = "https://github.com/emscripten-core/emsdk/archive/bfda0d0756751114dbab597396e67dcaa63bb331.tar.gz",
)

load("@emsdk//:deps.bzl", emsdk_deps = "deps")
emsdk_deps()

load("@emsdk//:emscripten_deps.bzl", emsdk_emscripten_deps = "emscripten_deps")
emsdk_emscripten_deps(emscripten_version = "2.0.31")

http_archive(
    name = "com_google_javascript_closure_library",
    sha256 = "90235e587dbc968a854ab11ac358c3a0fa57b4c121f540880419203dfe3cfa46",
    strip_prefix = "closure-library-7818ff7dc0b53555a7fb3c3427e6761e88bde3a2",
    urls = ["https://github.com/google/closure-library/archive/7818ff7dc0b53555a7fb3c3427e6761e88bde3a2.tar.gz"],
)

http_archive(
    name = "io_bazel_rules_closure",
    sha256 = "9498e57368efb82b985db1ed426a767cbf1ba0398fd7aed632fc3908654e1b1e",
    strip_prefix = "rules_closure-0.12.0",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_closure/archive/0.12.0.tar.gz",
        "https://github.com/bazelbuild/rules_closure/archive/0.12.0.tar.gz",
    ],
)

load("@io_bazel_rules_closure//closure:repositories.bzl", "rules_closure_dependencies", "rules_closure_toolchains")
rules_closure_dependencies()
rules_closure_toolchains()

local_repository(
    name = "amphtml-extensions",
    path = "../extensions",
)
